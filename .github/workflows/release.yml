name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: write

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Rust (stable)
      uses: dtolnay/rust-toolchain@master

    - name: Cache cargo
      uses: Swatinem/rust-cache@v2

    - name: Build release binary
      run: cargo build --locked --release

    - name: Package artifact (Linux/macOS)
      if: runner.os != 'Windows'
      shell: bash
      run: |
        set -euxo pipefail
        BIN_NAME="datatui"
        TAG_NAME="${GITHUB_REF_NAME}"
        OS="${RUNNER_OS}"
        ARCH="${RUNNER_ARCH}"
        ARTIFACT="datatui-${TAG_NAME}-${OS}-${ARCH}.tar.gz"
        mkdir -p dist
        cp "target/release/${BIN_NAME}" dist/
        [ -f README.md ] && cp README.md dist/ || true
        [ -f LICENSE ] && cp LICENSE dist/ || true
        tar -C dist -czf "${ARTIFACT}" .
        echo "ARTIFACT=${ARTIFACT}" >> $GITHUB_ENV

    - name: Package artifact (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        $ErrorActionPreference = "Stop"
        $BinName = "datatui.exe"
        $TagName = "${env:GITHUB_REF_NAME}"
        $OS = "${env:RUNNER_OS}"
        $ARCH = "${env:RUNNER_ARCH}"
        $Artifact = "datatui-$TagName-$OS-$ARCH.zip"
        New-Item -ItemType Directory -Force -Path dist | Out-Null
        Copy-Item "target\release\datatui.exe" "dist\"
        if (Test-Path "README.md") { Copy-Item "README.md" "dist\" }
        if (Test-Path "LICENSE") { Copy-Item "LICENSE" "dist\" }
        Compress-Archive -Path "dist\*" -DestinationPath $Artifact
        Add-Content -Path $env:GITHUB_ENV -Value "ARTIFACT=$Artifact"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ARTIFACT }}
        path: ${{ env.ARTIFACT }}
        if-no-files-found: error

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
        merge-multiple: true

    - name: Publish Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/*
        draft: false
        prerelease: ${{ contains(github.ref_name, '-rc') || contains(github.ref_name, '-beta') || contains(github.ref_name, '-alpha') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


